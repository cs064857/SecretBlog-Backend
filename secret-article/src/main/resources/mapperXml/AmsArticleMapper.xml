<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shijiawei.secretblog.article.mapper.AmsArticleMapper">
    <resultMap id="AmsArticleBaseResultMap" type="com.shijiawei.secretblog.article.entity.AmsArticle">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="getArticlesByCategoryIdAndPage">
        SELECT *
        FROM ams_article AS ams_article
        INNER JOIN ams_artInfo as ams_artInfo AND a
    </sql>

    <resultMap id="ArticleTagVoResultMap" type="com.shijiawei.secretblog.article.vo.AmsArticleTagsVo">
        <id property="id" column="tag_id"/>
        <result property="name" column="tag_name"/>
    </resultMap>

    <resultMap id="AmsArticleVoResultMap" type="com.shijiawei.secretblog.article.vo.AmsArticleVo">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <!-- AmsArtinfo 的欄位 -->
        <result property="userId" column="userId"/>
        <result property="createTime" column="createTime"/>
        <result property="updateTime" column="updateTime"/>
        <!-- AmsArtStatus 的欄位 -->
        <result property="viewsCount" column="viewsCount"/>
        <result property="likesCount" column="likesCount"/>
        <result property="bookmarksCount" column="bookmarksCount"/>
        <!-- AmsCategory 的欄位 -->
        <result property="categoryId" column="categoryId"/>
        <result property="categoryName" column="categoryName"/>
        <!-- 子查詢計算出的評論數 -->
        <result property="commentsCount" column="commentsCount"/>
        <!-- 文章對標籤 一對多關係映射 (僅使用 nested select，不可同時指定 resultMap) -->
        <collection property="amsArticleTagsVoList" select="getArticleTagVoList" column="{articleId=id}" fetchType="lazy"/>
    </resultMap>

    <select id="getArticleVo" resultMap="AmsArticleVoResultMap" parameterType="Long">
        SELECT
        ams_article.id AS id,
        ams_article.title AS title,
        ams_article.content AS content,
        ams_artInfo.user_id AS userId,
        ams_artInfo.create_time AS createTime,
        ams_artInfo.update_time AS updateTime,
        ams_art_status.views_count AS viewsCount,
        ams_art_status.likes_count AS likesCount,
        ams_art_status.bookmarks_count AS bookmarksCount,
        ams_category.id AS categoryId,
        ams_category.category_name AS categoryName,
        (
            SELECT COUNT(1)
            FROM ams_comment_info
            WHERE ams_comment_info.article_id = ams_article.id
        )   AS commentsCount
        FROM ams_article
        INNER JOIN ams_artInfo ON ams_article.id = ams_artInfo.article_id
        INNER JOIN ams_art_status ON ams_art_status.article_id = ams_article.id
        INNER JOIN ams_category ON ams_category.id = ams_artInfo.category_id
        WHERE ams_article.id=#{articleId}
        AND ams_artInfo.deleted =0 AND ams_category.deleted = 0
    </select>

    <select id="getArticleTagVoList" parameterType="map" resultMap="ArticleTagVoResultMap">
        SELECT
            ams_tags.id AS tag_id,
            ams_tags.name AS tag_name
        FROM ams_art_tag
        INNER JOIN ams_tags ON ams_art_tag.tags_id = ams_tags.id
        WHERE ams_art_tag.article_id = #{articleId}
        ORDER BY ams_art_tag.id
    </select>

</mapper>